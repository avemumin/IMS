@page "/addproduct"

@inject NavigationManager NavigationManager
@inject IAddProductUseCase AddProductUseCase
<h3>Add Product</h3>

<EditForm Model="_product"
          OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="form-group">
        <label for="name">Inventory Name</label>
        <InputText id="name"
                   @bind-Value="_product.ProductName"
                   class="form-control">
        </InputText>
    </div>
    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="quantity"
                     @bind-Value="_product.Quantity"
                     class="form-control">
        </InputNumber>
    </div>
    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="price"
                     @bind-Value="_product.Price"
                     class="form-control">
        </InputNumber>
    </div>
    <br />
    <div class="form-group">
        <label for="invs">Inventories</label>
      
       <ProductInventoriesComponent Product="_product"></ProductInventoriesComponent>
        

    </div>
    <br />
    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button"class="btn btn-warning"@onclick="Cancel">Cancel</button>

</EditForm>
@code {
    private Product _product = new Product();

    private async Task SaveProduct()
    {
        await AddProductUseCase.ExecuteAsync(_product);
        NavigationManager.NavigateTo("/products");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/products");
    }



}
