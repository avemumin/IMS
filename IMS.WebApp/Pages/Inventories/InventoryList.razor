@page "/inventories"
@using static IMS.WebApp.Controls.Common.AutoCompleteComponent

@inject NavigationManager NavigationManager
@inject IViewInventoriesByNameUseCases ViewInventoriesByNameUseCases
<h3>Inventory List</h3>
<br />
<SearchInventoryComponent OnSearchInventory="OnInventorySearch">
</SearchInventoryComponent>
<br />
<InventoryListComponent SearchTerm="@_searchTerm"></InventoryListComponent>

<br />

<button type="button"
        class="btn btn-primary"
        @onclick="AddInventory">
    Add Inventory
</button>

<p>
    <AutoCompleteComponent Label="Invenoty"
                           SearchFunction="SearchInvenoty"
                           OnItemSelected="OnItemSelected" >

    </AutoCompleteComponent>
    <br/>
    
    @selectedItem?.Name
</p>

@code {
    private ItemViewModel? selectedItem = null;
    private string _searchTerm = string.Empty;
    private void OnInventorySearch(string searchTerm)
    {
        _searchTerm = searchTerm;
    }

    private void AddInventory()
    {
        NavigationManager.NavigateTo("/addinventory");
    }

    private void OnItemSelected(ItemViewModel item)
    {
        selectedItem = item;
    }
    private List<ItemViewModel>? SearchInvenoty(string name)
    {
        var list = ViewInventoriesByNameUseCases.ExecuteAsync(name).GetAwaiter().GetResult();

        if (list == null) return null;
        return list.Select(x => new ItemViewModel { Id = x.InventoryId, Name = x.InventoryName })?.ToList();
    }
}
